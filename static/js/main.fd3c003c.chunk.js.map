{"version":3,"sources":["components/header.js","pages/home.js","pages/aboutme.js","pages/portraits.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","e","console","log","this","history","push","className","onClick","goHome","src","process","goAboutMe","goPortraits","Component","withRouter","Home","class","AboutMe","Portraits","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6SAIMA,E,YACJ,WAAYC,GAAO,qEACXA,I,oEAIDC,GACLC,QAAQC,IAAI,UACZC,KAAKJ,MAAMK,QAAQC,KAAK,KACxBJ,QAAQC,IAAI,W,gCAGJF,GACRG,KAAKJ,MAAMK,QAAQC,KAAK,e,kCAEdL,GACVG,KAAKJ,MAAMK,QAAQC,KAAK,gB,+BAIjB,IAAD,OACN,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,YACb,yBAAKC,QAAS,SAACP,GAAD,OAAO,EAAKQ,OAAOR,IAAIM,UAAU,aAAaG,IAAKC,qCAEnE,yBAAKJ,UAAU,+BACb,yBAAKA,UAAU,wBACb,uBAAGA,UAAU,aAAaC,QAAS,SAACP,GAAD,OAAO,EAAKQ,OAAOR,KAAtD,0BAEF,yBAAKM,UAAU,YACb,uBAAGC,QAAS,SAACP,GAAD,OAAO,EAAKW,UAAUX,KAAlC,cAEF,yBAAKM,UAAU,YACb,uBAAGC,QAAS,SAACP,GAAD,OAAO,EAAKY,YAAYZ,KAApC,oB,GAlCSa,aA4CNC,cAAWhB,G,gBC1CpBiB,E,iLAIF,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKC,MAAM,QACX,kBAAC,WAAD,KACQ,6BACI,yBAAKP,IAAKC,wCAEd,6BACI,yBAAKD,IAAKC,wCAEd,6BACI,yBAAKD,IAAKC,+C,GAhBXG,aAyBJC,cAAWC,GC3BpBE,E,iLAEF,OACE,6BACE,kBAAC,EAAD,MACA,2D,GALcJ,aAWPC,cAAWG,GCVpBC,E,iLAUF,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKF,MAAM,QACX,kBAAC,WAAD,KACQ,6BACI,yBAAKP,IAAKC,4CAEd,6BACI,yBAAKD,IAAKC,4CAEd,6BACI,yBAAKD,IAAKC,mD,GAtBNG,aA+BTC,cAAWI,GCKXC,E,YAjCb,WAAYpB,GAAO,qEACXA,I,sEAKN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,OAAO,EAAMC,KAAK,IACvBC,OAAQ,SAACvB,GAAD,OACN,kBAAC,EACKA,MAGV,kBAAC,IAAD,CAAOqB,OAAO,EAAMC,KAAK,YACzBC,OAAQ,SAACvB,GAAD,OACN,kBAAC,EACKA,MAGR,kBAAC,IAAD,CAAOqB,OAAO,EAAMC,KAAK,aACvBC,OAAQ,SAACvB,GAAD,OACN,kBAAC,EACKA,Y,GA1BFc,aCMEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASN,OAAO,kBAAC,EAAD,MAASO,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.fd3c003c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n\nclass Header extends Component {\n  constructor(props){\n    super(props);\n\n  }\n\n  goHome(e){\n    console.log(\"before\");\n    this.props.history.push('/');\n    console.log(\"after\");\n  }\n\n  goAboutMe(e){\n    this.props.history.push('/about-me')\n  }\n  goPortraits(e){\n    this.props.history.push('/portraits')\n  }\n\n\n  render(){\n    return(\n      <div className=\"row header-fixed\">\n        <div className=\"col-md-4\">\n          <img onClick={(e) => this.goHome(e)} className=\"logo-black\" src={process.env.PUBLIC_URL+\"/logo/rkp_BLACK.png\"}></img>\n        </div>\n        <div className=\"menu-container row col-md-8\">\n          <div className=\"col-md-8 header-name\">\n            <p className=\"border-box\" onClick={(e) => this.goHome(e)}>Radhika K Photography</p>\n          </div>\n          <div className=\"col-md-2\">\n            <p onClick={(e) => this.goAboutMe(e)}> About me</p>\n          </div>\n          <div className=\"col-md-2\">\n            <p onClick={(e) => this.goPortraits(e)}>Portraits</p>\n          </div>\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Header);\n","import React, { Component } from \"react\";\nimport Header from \"../components/header.js\"\nimport { withRouter } from \"react-router-dom\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\nclass Home extends Component {\n\n\n  render(){\n    return(\n      <div>\n        <Header/>\n        <div class=\"body\">\n        <Carousel>\n                <div>\n                    <img src={process.env.PUBLIC_URL+\"/images/home/home1.jpg\"} />\n                </div>\n                <div>\n                    <img src={process.env.PUBLIC_URL+\"/images/home/home2.jpg\"} />\n                </div>\n                <div>\n                    <img src={process.env.PUBLIC_URL+\"/images/home/home1.jpg\"}/>\n                </div>\n          </Carousel>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Home);\n","import React, { Component } from \"react\";\nimport Header from \"../components/header.js\";\nimport { withRouter } from \"react-router-dom\";\n\nclass AboutMe extends Component {\n  render(){\n    return(\n      <div>\n        <Header/>\n        <p> Hi, I'm a photographer</p>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(AboutMe);\n","import React, { Component } from \"react\";\nimport Header from \"../components/header.js\";\nimport { withRouter } from \"react-router-dom\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nclass Portraits extends Component {\n  render(){\n    const photos = [\n\n      {\n        original: process.env.PUBLIC_URL+'/images/priscilla/pri1.jpg',\n        thumbnail: process.env.PUBLIC_URL+'/images/priscilla/pri1.jpg',\n      }\n    ];\n\n    return(\n      <div>\n        <Header/>\n        <div class=\"body\">\n        <Carousel>\n                <div>\n                    <img src={process.env.PUBLIC_URL+\"/images/priscilla/pri3.jpg\"} />\n                </div>\n                <div>\n                    <img src={process.env.PUBLIC_URL+\"/images/priscilla/pri3.jpg\"} />\n                </div>\n                <div>\n                    <img src={process.env.PUBLIC_URL+\"/images/priscilla/pri3.jpg\"}/>\n                </div>\n          </Carousel>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Portraits);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/home.js\"\nimport AboutMe from \"./pages/aboutme.js\"\nimport Portraits from \"./pages/portraits.js\"\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact={true} path=\"/\"\n            render={(props) =>\n              <Home\n                {...props}\n              />}\n          />\n          <Route exact={true} path=\"/about-me\"\n          render={(props) =>\n            <AboutMe\n              {...props}\n            />}\n          />\n          <Route exact={true} path=\"/portraits\"\n            render={(props) =>\n              <Portraits\n                {...props}\n              />}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}